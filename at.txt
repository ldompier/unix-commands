=============================
 Commandes principales avec at
=============================

ğŸ”¹ Description
--------------
`at` permet de planifier l'exÃ©cution d'une commande une seule fois Ã  un moment donnÃ©.

ğŸ”¹ Commandes de base
--------------------
at <heure> [date]           : Planifie une commande Ã  exÃ©cuter Ã  l'heure/date spÃ©cifiÃ©e
atq                          : Liste les tÃ¢ches planifiÃ©es pour l'utilisateur courant
atrm <job_id>               : Supprime une tÃ¢che planifiÃ©e
at -l                       : Alias de `atq`
at -c <job_id>              : Affiche le contenu de la tÃ¢che planifiÃ©e

ğŸ”¹ Exemples
-----------
at 14:00                    : Planifie une commande pour 14h aujourd'hui
at now + 1 minute           : Dans une minute
at 08:30 AM tomorrow        : Demain matin Ã  8h30
at 5pm + 2 days             : Dans deux jours Ã  17h
echo "shutdown -h now" | at now + 1 minute  : ExÃ©cute un arrÃªt dans une minute

ğŸ”¹ Syntaxes valides pour la date/heure
--------------------------------------
- now + N minutes/hours/days
- HH:MM
- midnight / noon / teatime
- tomorrow
- DD.MM.YY ou MM/DD/YY
- day name (e.g. `at 4pm Friday`)

ğŸ”¹ Astuces
----------
- Utiliser `echo "<commande>" | at <heure>` pour planifier une tÃ¢che
- Le dÃ©mon `atd` doit Ãªtre actif pour exÃ©cuter les tÃ¢ches (`systemctl start atd`)
- Les fichiers `/etc/at.allow` et `/etc/at.deny` peuvent restreindre l'utilisation
- Pas d'Ã©dition interactive comme `crontab` : chaque tÃ¢che est unique

ğŸ”¹ Voir les logs
----------------
- journalctl -u atd         : Journal systemd des tÃ¢ches at
